/*************************************************************************
        > File Name: 16.BMP.c
        > Author:SJQ
        > Mail:3505224319@qq.com
        > Created Time: Mon 20 May 2024 07:32:59 PM CST
 ************************************************************************/

#include<stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#define MAX_LEN 100

typedef struct Stack
{
    char *data;
    int top,size;
}Stack;

Stack* init_stack(int n)
{
    Stack* s=(Stack*)malloc(sizeof(Stack));
    s->data=(char*)malloc(sizeof(char)*n);
    s->size=n;
    s->top=-1;
    return s;
}

int empty(Stack *s)
{
    return s->top==-1;
}

char search(Stack *s)
{
    if(empty(s))
    {
        printf("栈为空，无法查看\n");
        return '\0';
    }
    return s->data[s->top];
}

int push(Stack* s,char val)
{
    if(s->top+1==s->size)
    {
        printf("栈已满,无法压入\n");
        return 0;
    }
    s->top+=1;
    s->data[s->top]=val;
    return 1;
}

int pop(Stack *s)
{
    if(empty(s))
    {
        printf("栈为空,无法弹出\n");
        return 0;
    }
    s->top-=1;
    return 1;
}


void clear_stack(Stack *s)
{
    if(s==NULL)return ;
    free(s->data);
    free(s);
    return ;
}

void BMP(char str[],Stack* s)
{
    int len=strlen(str),flg=1;
    for(int i=0;i<len;i++)
    {
        if(str[i]=='('||str[i]=='['||str[i]=='{')push(s,str[i]);
        else
        {
            switch(str[i])
            {
                case ')':if(!empty(s)&&s->data[s->top]=='(')pop(s);
                        else flg=0;
                        break;
                case ']':if(!empty(s)&&s->data[s->top]=='[')pop(s);
                        else flg=0;
                        break;
                case '}':if(!empty(s)&&s->data[s->top]=='{')pop(s);
                        else flg=0;
                        break;
            }
        }
    }
    if(s->top!=-1||flg==0)
    printf("匹配失败\n");
    else printf("匹配成功\n");
    return ;
}

int main()
{
    srand((unsigned)time(0));
    Stack *s=init_stack(MAX_LEN);
    char str[MAX_LEN-5];
    while(scanf("%s",str)!=EOF)
    {
        BMP(str,s);
        s->top=-1;//清栈
    }
    clear_stack(s);
    return 0;
}
